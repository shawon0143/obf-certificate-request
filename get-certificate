#!/usr/bin/ruby

require 'json'



# Get OBF Public Key
`wget -qO tmp/obf_public_key https://openbadgefactory.com/v1/client/OBF.rsa.pub`

# Decrypt our API Key with their public key
decryptedAPIKey = JSON.parse(`./decrypt-api-key`)
decryptedAPIKey
subject = decryptedAPIKey["subject"]
id = decryptedAPIKey["id"].strip
File.write("config/id", id)
time = Time.at(decryptedAPIKey["ctime"])

# Test if our API Key is too old (older than 10 miutes)
# This should not happen when atomatically retrieving our API key with the hack above
if (Time.now > time + 10*60) then
  abort "API token is too old. Go to https://openbadgefactory.com/c/client/my/edit2/apikey to generate a new one."
end

# Generate a Certificate Signing Request (CSR)
openssl = "openssl req -new -nodes -batch -days 1095 -newkey rsa:2048 -keyout obf.key -subj '#{subject}' > tmp/obf.csr 2>/dev/null"
`#{openssl}`

# Send the CSR together with our API Key as signature back to OBF
request_json = "{
  \"signature\": \"#{File.read('config/api_key')}\",
  \"request\": \"#{File.read('tmp/obf.csr').gsub!("\n", '\\n')}\"
}"
File.write("tmp/request.json", request_json)
curl = "curl -s -X POST -H \"Content-Type: application/json\" -d @tmp/request.json https://openbadgefactory.com/v1/client/#{id}/sign_request"
puts `#{curl}`
